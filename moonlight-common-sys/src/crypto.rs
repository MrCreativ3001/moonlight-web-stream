/* automatically generated by rust-bindgen 0.72.0 */

pub const __bool_true_false_are_defined: u32 = 1;
pub const true_: u32 = 1;
pub const false_: u32 = 0;
pub const ALGORITHM_AES_CBC: u32 = 1;
pub const ALGORITHM_AES_GCM: u32 = 2;
pub const CIPHER_FLAG_RESET_IV: u32 = 1;
pub const CIPHER_FLAG_FINISH: u32 = 2;
pub const CIPHER_FLAG_PAD_TO_BLOCK_SIZE: u32 = 4;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct evp_cipher_ctx_st {
    _unused: [u8; 0],
}
pub type EVP_CIPHER_CTX = evp_cipher_ctx_st;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _PLT_CRYPTO_CONTEXT {
    pub ctx: *mut EVP_CIPHER_CTX,
    pub initialized: bool,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _PLT_CRYPTO_CONTEXT"][::std::mem::size_of::<_PLT_CRYPTO_CONTEXT>() - 16usize];
    ["Alignment of _PLT_CRYPTO_CONTEXT"][::std::mem::align_of::<_PLT_CRYPTO_CONTEXT>() - 8usize];
    ["Offset of field: _PLT_CRYPTO_CONTEXT::ctx"]
        [::std::mem::offset_of!(_PLT_CRYPTO_CONTEXT, ctx) - 0usize];
    ["Offset of field: _PLT_CRYPTO_CONTEXT::initialized"]
        [::std::mem::offset_of!(_PLT_CRYPTO_CONTEXT, initialized) - 8usize];
};
pub type PLT_CRYPTO_CONTEXT = _PLT_CRYPTO_CONTEXT;
pub type PPLT_CRYPTO_CONTEXT = *mut _PLT_CRYPTO_CONTEXT;
unsafe extern "C" {
    pub fn PltCreateCryptoContext() -> PPLT_CRYPTO_CONTEXT;
}
unsafe extern "C" {
    pub fn PltDestroyCryptoContext(ctx: PPLT_CRYPTO_CONTEXT);
}
unsafe extern "C" {
    pub fn PltEncryptMessage(
        ctx: PPLT_CRYPTO_CONTEXT,
        algorithm: ::std::os::raw::c_int,
        flags: ::std::os::raw::c_int,
        key: *mut ::std::os::raw::c_uchar,
        keyLength: ::std::os::raw::c_int,
        iv: *mut ::std::os::raw::c_uchar,
        ivLength: ::std::os::raw::c_int,
        tag: *mut ::std::os::raw::c_uchar,
        tagLength: ::std::os::raw::c_int,
        inputData: *mut ::std::os::raw::c_uchar,
        inputDataLength: ::std::os::raw::c_int,
        outputData: *mut ::std::os::raw::c_uchar,
        outputDataLength: *mut ::std::os::raw::c_int,
    ) -> bool;
}
unsafe extern "C" {
    pub fn PltDecryptMessage(
        ctx: PPLT_CRYPTO_CONTEXT,
        algorithm: ::std::os::raw::c_int,
        flags: ::std::os::raw::c_int,
        key: *mut ::std::os::raw::c_uchar,
        keyLength: ::std::os::raw::c_int,
        iv: *mut ::std::os::raw::c_uchar,
        ivLength: ::std::os::raw::c_int,
        tag: *mut ::std::os::raw::c_uchar,
        tagLength: ::std::os::raw::c_int,
        inputData: *mut ::std::os::raw::c_uchar,
        inputDataLength: ::std::os::raw::c_int,
        outputData: *mut ::std::os::raw::c_uchar,
        outputDataLength: *mut ::std::os::raw::c_int,
    ) -> bool;
}
unsafe extern "C" {
    pub fn PltGenerateRandomData(data: *mut ::std::os::raw::c_uchar, length: ::std::os::raw::c_int);
}
