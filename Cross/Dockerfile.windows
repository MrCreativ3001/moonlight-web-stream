ARG CROSS_BASE_IMAGE
FROM $CROSS_BASE_IMAGE AS base

# -- Overwrite the openssl finder so we just don't do anything (it'll just error out even though we have the lib)
RUN echo "" > /usr/local/share/cmake-3.23/Modules/FindOpenSSL.cmake

# -- This will enable functionality for cross in the build rs
ENV MOONLIGHT_COMMON_CROSS=1

FROM base AS win

# -- Overwrite system MinGW-w64 headers with latest version
WORKDIR /tmp

# Install wget/unzip if not already present
RUN apt-get update && apt-get install -y wget unzip

# Download latest headers from GitHub
RUN wget -O mingw-w64-headers.zip https://github.com/mirror/mingw-w64/archive/refs/heads/master.zip && \
    unzip mingw-w64-headers.zip

# Copy headers into system MinGW-w64 include folder, overwriting old files
RUN cp -r mingw-w64-master/mingw-w64-headers/include/* $CROSS_SYSROOT/include/ && \
    rm -rf /tmp/*

# -- Some moonlight common c files require windows headers but they have them capitalized so we just symlink them to fix that
RUN ln -s $CROSS_SYSROOT/include/ws2tcpip.h /usr/x86_64-w64-mingw32/include/Ws2tcpip.h && \
    ln -s $CROSS_SYSROOT/include/mswsock.h /usr/x86_64-w64-mingw32/include/Mswsock.h && \
    ln -s $CROSS_SYSROOT/include/versionhelpers.h /usr/x86_64-w64-mingw32/include/VersionHelpers.h && \
    ln -s $CROSS_SYSROOT/include/windows.h /usr/x86_64-w64-mingw32/include/Windows.h && \
    ln -s $CROSS_SYSROOT/include/winsock2.h /usr/x86_64-w64-mingw32/include/Winsock2.h \
    # For some reason the stdbool.h is not in the include path
    ln -s /usr/lib/gcc/x86_64-w64-mingw32/7.3-posix/include/stdbool.h /usr/x86_64-w64-mingw32/include/stdbool.h
